# .github/workflows/ci.yml

name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: lint • type • test • build (${{ matrix.os }} / py${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12", "3.13" ]

    env:
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PYTHONWARNINGS: default

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # ensures tags available for hatch-vcs in local runs

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Upgrade pip
        run: python -m pip install -U pip

      - name: Install project and tooling
        run: |
          python -m pip install -e .
          python -m pip install -U ruff mypy pytest build twine

      - name: Ruff format check
        run: ruff format --check .

      - name: Ruff lint
        run: ruff check .

      - name: Mypy type-check
        run: mypy src/reqsync

      - name: Run tests
        run: pytest -q

      - name: Build sdist and wheel
        run: python -m build

      - name: Twine check metadata
        run: python -m twine check dist/*

      - name: Smoke test wheel install and CLI
        run: |
          python -m pip install --force-reinstall dist/*.whl
          python -c "import reqsync, subprocess, sys; print('reqsync version:', getattr(reqsync, '__version__', 'unknown')); subprocess.run([sys.executable, '-m', 'reqsync.cli', '--help'], check=True)"